(
    graph: (
        nodes: {
            0: (
                template: PyNode((
                    name: "Circle_Mask",
                    relative_path: "core/Circle_Mask.py",
                    ports: Ok((
                        inputs: {},
                        outputs: {
                            "out": ArrayReal,
                        },
                    )),
                    parameters: Err(Config("Failed to interperet  Circle_Mask\'s `config`: TypeError: failed to extract enum NodeUIWidget (\'Slider | NumberField | CheckBox\')\n- variant Slider (Slider): TypeError: failed to extract field NodeUIWidget::Slider.0, caused by TypeError: \'MySlider4\' object cannot be converted to \'MySlider4\'\n- variant NumberField (NumberField): TypeError: failed to extract field NodeUIWidget::NumberField.0, caused by TypeError: must be real number, not builtins.MySlider4\n- variant CheckBox (CheckBox): TypeError: failed to extract field NodeUIWidget::CheckBox.0, caused by TypeError: \'MySlider4\' object cannot be converted to \'PyBool\', {\'a\': 3.0, \'b\': False, \'radius\': <builtins.MySlider4 object at 0x1070a80c0>}")),
                )),
            ),
            1: (
                template: PyNode((
                    name: "Phantom",
                    relative_path: "core/Phantom.py",
                    ports: Ok((
                        inputs: {},
                        outputs: {
                            "out": ArrayReal,
                        },
                    )),
                    parameters: Ok({}),
                )),
            ),
            2: (
                template: RustNode(Plot2D((
                    rect: (
                        center: (
                            x: 0.5,
                            y: 0.5,
                        ),
                        width: 1.0,
                        height: 1.0,
                    ),
                ))),
            ),
        },
        edges: [((
            node: 1,
            name: "out",
            io: Out,
        ), (
            node: 2,
            name: "a",
            io: In,
        ))],
        next_id: 3,
    ),
    shapes: (
        camera: (
            position: (
                x: -0.2437439,
                y: 0.0,
            ),
            zoom: 1.0,
        ),
        shape_positions: {
            2: (
                x: 232.5094,
                y: 313.36563,
            ),
            1: (
                x: 290.26877,
                y: 185.7375,
            ),
            0: (
                x: 73.40939,
                y: 138.5125,
            ),
        },
    ),
)